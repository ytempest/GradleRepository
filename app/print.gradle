/**
 * @author heqidu
 * @since 2019/11/23
 * 用于打印一些属性、方法
 */
android {//该闭包的对象为AppExtension，该闭包内的所有闭包可以访问到这闭包的所有配置
    // 这里是apk所以是applicationVariants，如果是library，那么就是libraryVariants
    applicationVariants.all { variant ->//获取到ApplicationVariant
        log("---------------applicationVariant start---------------")
        log("variant.name=" + variant.name)
        log("variant.flavorName=" + variant.flavorName)
        log("variant.description=" + variant.description)
        log("variant.dirName=" + variant.dirName)
        log("variant.baseName=" + variant.baseName)
        log("variant.buildType=" + variant.buildType)
        log("variant.signingConfig=" + variant.signingConfig)
        log("variant.productFlavors=" + variant.productFlavors)

        variant.productFlavors.each { flavor ->//获取到ReadOnlyProductFlavor，实现类为ProductFlavorImpl
            log("\tstart---------ReadOnlyProductFlavor")
            log("\tflavor.toString() =" + flavor.toString())
            log("\tflavor.applicationId =" + flavor.applicationId)
            log("\tflavor.applicationIdSuffix =" + flavor.applicationIdSuffix)
            log("\tflavor.dimension =" + flavor.dimension)
            log("\tvariant.outputs=" + variant.outputs)

            variant.outputs.each { output ->//获取到BaseVariantOutput，实现类为BaseVariantOutputImpl
                log("\t\tstart---------BaseVariantOutput")
                log("\t\toutput.name =" + output.name)
                log("\t\toutput.baseName =" + output.baseName)
                log("\t\toutput.dirName =" + output.dirName)
                log("\t\toutput.outputFile =" + output.outputFile)
                log("\t\toutput.outputFileName =" + output.outputFileName)//通过outputFileName可以修改文件名
                log("\t\toutput.outputs =" + output.outputs)

                output.outputs.each { out ->//获取到OutputFile，实现类为ApkOutputFile或者BuildOutput
                    log("\t\tout.toString() =" + out.toString())
                }

                if (output.outputFile != null) {//类型为File
                    log("\t\toutput.outputFile.path =" + output.outputFile.path)
                    log("\t\toutput.outputFile.name =" + output.outputFile.name)
                }
                log("\t\tend---------BaseVariantOutput")
            }
            log("\tend---------ReadOnlyProductFlavor")
        }
        log("---------------applicationVariant end---------------\n")
    }
}


static def log(Object val) {
    println("[GradleRepository]: " + val)
}